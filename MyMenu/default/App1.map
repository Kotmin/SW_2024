Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              menu.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              menu.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strcpy.o)
                              menu.o (strcpy)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD lcd_lib.o
LOAD main.o
LOAD menu.o
LOAD my_keyboard_lib.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x988
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000054       0x15 my_keyboard_lib.o
                0x00000058                tab
                0x00000054                kolumny
                0x0000006a                . = ALIGN (0x2)
 *fill*         0x00000069        0x1 00
                0x0000006a                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000006a        0x0 linker stubs
 *(.trampolines*)
                0x0000006a                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000006a                __ctors_start = .
 *(.ctors)
                0x0000006a                __ctors_end = .
                0x0000006a                __dtors_start = .
 *(.dtors)
                0x0000006a                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000006a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000006a                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000006a        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000076       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000076                __do_copy_data
 .init4         0x0000008c       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000008c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009c        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000a4        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x000000a4                __vector_1
                0x000000a4                __vector_12
                0x000000a4                __bad_interrupt
                0x000000a4                __vector_6
                0x000000a4                __vector_3
                0x000000a4                __vector_11
                0x000000a4                __vector_13
                0x000000a4                __vector_17
                0x000000a4                __vector_19
                0x000000a4                __vector_7
                0x000000a4                __vector_5
                0x000000a4                __vector_4
                0x000000a4                __vector_9
                0x000000a4                __vector_2
                0x000000a4                __vector_15
                0x000000a4                __vector_8
                0x000000a4                __vector_14
                0x000000a4                __vector_10
                0x000000a4                __vector_16
                0x000000a4                __vector_18
                0x000000a4                __vector_20
 .text          0x000000a8      0x21c lcd_lib.o
                0x0000023e                LCD_clear
                0x00000108                LCD_send4BitCommand
                0x0000017e                LCD_sendInstruction
                0x00000140                LCD_writeCharacter
                0x000001d0                LCD_clearFromPoint
                0x0000024e                LCD_init
                0x000001f6                LCD_writeText
                0x000000a8                setDDR
                0x000001bc                LCD_setCoursor
 .text          0x000002c4       0xb2 main.o
                0x000002c4                main
 .text          0x00000376      0x47a menu.o
                0x000003b8                moveToParent
                0x0000038c                menu_prevItem
                0x000003a2                moveToChild
                0x000003ce                menu_actionForward
                0x00000412                foo1
                0x000004c0                menu_display
                0x00000554                menu_init
                0x000003f0                menu_actionBackward
                0x00000376                menu_nextItem
 .text          0x000007f0      0x186 my_keyboard_lib.o
                0x00000886                translate
                0x00000858                getPin
                0x00000830                setPort
                0x000008b8                get_key
                0x000007f0                set_DDR
 .text          0x00000976        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000976        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000976        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000976        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strcpy.o)
                0x00000976                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000976        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000976        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000976        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000976        0xe c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strcpy.o)
                0x00000976                strcpy
                0x00000984                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000984        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000984                exit
                0x00000984                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000984        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000988                _etext = .

.data           0x00800060       0x7c load address 0x00000988
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 lcd_lib.o
 .data          0x00800060        0x0 main.o
 .data          0x00800060       0x7c menu.o
 .data          0x008000dc        0x0 my_keyboard_lib.o
 .data          0x008000dc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x008000dc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x008000dc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x008000dc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strcpy.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000dc                . = ALIGN (0x2)
                0x008000dc                _edata = .
                0x008000dc                PROVIDE (__data_end, .)

.bss            0x008000dc      0x105
                0x008000dc                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000dc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x008000dc        0x0 lcd_lib.o
 .bss           0x008000dc        0x0 main.o
 .bss           0x008000dc      0x105 menu.o
 .bss           0x008001e1        0x0 my_keyboard_lib.o
 .bss           0x008001e1        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x008001e1        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x008001e1        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x008001e1        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strcpy.o)
 *(.bss*)
 *(COMMON)
                0x008001e1                PROVIDE (__bss_end, .)
                0x00000988                __data_load_start = LOADADDR (.data)
                0x00000a04                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008001e1        0x0
                0x008001e1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008001e1                PROVIDE (__noinit_end, .)
                0x008001e1                _end = .
                0x008001e1                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 lcd_lib.o
 .debug_aranges
                0x00000020       0x20 main.o
 .debug_aranges
                0x00000040       0x20 menu.o
 .debug_aranges
                0x00000060       0x20 my_keyboard_lib.o

.debug_pubnames
                0x00000000      0x1e7
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0xbb lcd_lib.o
 .debug_pubnames
                0x000000bb       0x1b main.o
 .debug_pubnames
                0x000000d6       0xae menu.o
 .debug_pubnames
                0x00000184       0x63 my_keyboard_lib.o

.debug_info     0x00000000      0xee3
 *(.debug_info)
 .debug_info    0x00000000      0x572 lcd_lib.o
 .debug_info    0x00000572      0x1ec main.o
 .debug_info    0x0000075e      0x489 menu.o
 .debug_info    0x00000be7      0x2fc my_keyboard_lib.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x550
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x16c lcd_lib.o
 .debug_abbrev  0x0000016c       0xf3 main.o
 .debug_abbrev  0x0000025f      0x18d menu.o
 .debug_abbrev  0x000003ec      0x164 my_keyboard_lib.o

.debug_line     0x00000000      0xb55
 *(.debug_line)
 .debug_line    0x00000000      0x308 lcd_lib.o
 .debug_line    0x00000308      0x125 main.o
 .debug_line    0x0000042d      0x4c4 menu.o
 .debug_line    0x000008f1      0x264 my_keyboard_lib.o

.debug_frame    0x00000000      0x1c0
 *(.debug_frame)
 .debug_frame   0x00000000       0xa0 lcd_lib.o
 .debug_frame   0x000000a0       0x20 main.o
 .debug_frame   0x000000c0       0xa0 menu.o
 .debug_frame   0x00000160       0x60 my_keyboard_lib.o

.debug_str      0x00000000      0x33a
 *(.debug_str)
 .debug_str     0x00000000      0x175 lcd_lib.o
                                0x1b3 (size before relaxing)
 .debug_str     0x00000175       0x59 main.o
                                0x127 (size before relaxing)
 .debug_str     0x000001ce       0xd6 menu.o
                                0x22b (size before relaxing)
 .debug_str     0x000002a4       0x96 my_keyboard_lib.o
                                0x187 (size before relaxing)

.debug_loc      0x00000000      0x6c1
 *(.debug_loc)
 .debug_loc     0x00000000      0x2d0 lcd_lib.o
 .debug_loc     0x000002d0      0x1f0 menu.o
 .debug_loc     0x000004c0      0x201 my_keyboard_lib.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(App1.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0xc0
 .debug_ranges  0x00000000       0x18 main.o
 .debug_ranges  0x00000018       0x60 menu.o
 .debug_ranges  0x00000078       0x48 my_keyboard_lib.o
